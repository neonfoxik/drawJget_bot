import telebot
import os
from dotenv import load_dotenv
import random
import datetime
import openpyxl
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import string

load_dotenv()

BOT_TOKEN = os.getenv('BOT_TOKEN')

if not BOT_TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞")
    exit(1)

CHANNEL_USERNAME = os.getenv('CHANNEL_USERNAME', 'official_jget')

bot = telebot.TeleBot(BOT_TOKEN)

user_states = {}

def generate_participant_code():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    characters = string.ascii_uppercase + string.digits
    return ''.join(random.choice(characters) for _ in range(6))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
def check_subscription(user_id, channel_username):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª"""
    try:
        channel_variants = [
            channel_username, 
            f"@{channel_username}", 
            f"https://t.me/{channel_username}", 
        ]
        
        for channel in channel_variants:
            try:
                member = bot.get_chat_member(channel, user_id)
                
                if member.status in ['member', 'administrator', 'creator']:
                    return True
            except Exception as e:
                print(f"DEBUG: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–Ω–∞–ª–∞ {channel}: {e}")
                continue
        
        return False
    except Exception as e:
        print(f"DEBUG: –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

def find_existing_participant(user_id):
    """–ò—â–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ Excel —Ç–∞–±–ª–∏—Ü–µ"""
    filename = 'participants.xlsx'
    
    try:
        try:
            workbook = openpyxl.load_workbook(filename)
            sheet = workbook.active
            
            for row in range(2, sheet.max_row + 1):  
                if sheet.cell(row=row, column=1).value == user_id:
                    return {
                        'username': sheet.cell(row=row, column=2).value,
                        'parent_fio': sheet.cell(row=row, column=3).value,
                        'child_school': sheet.cell(row=row, column=4).value,
                        'child_class': sheet.cell(row=row, column=5).value,
                        'phone_number': sheet.cell(row=row, column=6).value,
                        'participant_code': sheet.cell(row=row, column=7).value,
                        'registration_date': sheet.cell(row=row, column=8).value
                    }
            
            return None  
            
        except FileNotFoundError:
            return None 
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ Excel: {e}")
        return None

def save_participant_to_excel(user_id, username, parent_fio, child_school, child_class, phone_number, participant_code):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ Excel —Ñ–∞–π–ª"""
    filename = 'participants.xlsx'
    
    try:
        try:
            workbook = openpyxl.load_workbook(filename)
            sheet = workbook.active
        except FileNotFoundError:
            workbook = openpyxl.Workbook()
            sheet = workbook.active
            sheet.append(['ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'Username Telegram', '–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è', '–®–∫–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞', '–ö–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞', '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', '–ö–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞', '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'])
        
        current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        sheet.append([user_id, username, parent_fio, child_school, child_class, phone_number, participant_code, current_time])
        
        workbook.save(filename)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Excel: {e}")
        return False

def create_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("üîç –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", callback_data="check_subscription")
    )
    return keyboard

def create_phone_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True))
    return keyboard

def create_info_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–æ–¥–∏—Ç–µ–ª–µ –∏ —Ä–µ–±–µ–Ω–∫–µ"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(KeyboardButton("üìù –í–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"))
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
    existing_participant = find_existing_participant(user_id)
    
    if existing_participant:
        # –£—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
        existing_text = f"""
üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!**

‚úÖ **–í—ã —É–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞!**

üìã **–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:**
üë§ –§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è: {existing_participant['parent_fio']}
üè´ –®–∫–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞: {existing_participant['child_school']}
üìö –ö–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞: {existing_participant['child_class']}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {existing_participant['phone_number']}
üé´ **–ö–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞: `{existing_participant['participant_code']}`**
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {existing_participant['registration_date']}

‚è≥ **–ñ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞!**
–£–¥–∞—á–∏! üçÄ
        """
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∫ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
        user_states[user_id] = {
            'username': username,
            'first_name': first_name,
            'subscribed': True,  # –°—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω
            'phone_provided': True,  # –°—á–∏—Ç–∞–µ–º —á—Ç–æ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
            'phone_number': existing_participant['phone_number'],
            'parent_fio': existing_participant['parent_fio'],
            'child_school': existing_participant['child_school'],
            'child_class': existing_participant['child_class']
        }
        
        bot.reply_to(message, existing_text, parse_mode='Markdown')
        
    else:
        # –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ - –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[user_id] = {
            'username': username,
            'first_name': first_name,
            'subscribed': False,
            'phone_provided': False,
            'phone_number': None,
            'parent_fio': None,
            'child_school': None,
            'child_class': None,
            'current_step': 'subscription'  # –¢–µ–∫—É—â–∏–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        }
        
        welcome_text = f"""
–ü—Ä–∏–≤–µ—Ç! üëã

–Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Ç –∫–ª—É–±–∞ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏ J-Get!

–ß—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞:
1Ô∏è‚É£ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª @{CHANNEL_USERNAME}
2Ô∏è‚É£ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
3Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–¥–∏—Ç–µ–ª–µ –∏ —Ä–µ–±–µ–Ω–∫–µ

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:
        """
        
        bot.reply_to(message, welcome_text, reply_markup=create_main_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    user_id = call.from_user.id
    
    if call.data == "check_subscription":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
        if check_subscription(user_id, CHANNEL_USERNAME):
            # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if user_id not in user_states:
                user_states[user_id] = {
                    'username': call.from_user.username,
                    'first_name': call.from_user.first_name,
                    'subscribed': False,
                    'phone_provided': False,
                    'phone_number': None
                }
            
            user_states[user_id]['subscribed'] = True
            bot.answer_callback_query(call.id, "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!")
            
            # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            user_states[user_id]['current_step'] = 'phone'
            new_text = f"""
‚úÖ **–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª @{CHANNEL_USERNAME}!**

üìã **–°—Ç–∞—Ç—É—Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:**
üîç –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ
üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ‚ùå –ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–¥–∏—Ç–µ–ª–µ –∏ —Ä–µ–±–µ–Ω–∫–µ: ‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω–∞

**–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:** –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            """
            
            keyboard = InlineKeyboardMarkup().add(
                InlineKeyboardButton("üì± –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", callback_data="provide_phone")
            )
            
            bot.edit_message_text(
                new_text,
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=keyboard
            )
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.answer_callback_query(
                call.id, 
                f"‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª @{CHANNEL_USERNAME}!", 
                show_alert=True
            )
            
           
    elif call.data == "provide_phone":
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if user_id not in user_states:
            user_states[user_id] = {
                'username': call.from_user.username,
                'first_name': call.from_user.first_name,
                'subscribed': False,
                'phone_provided': False,
                'phone_number': None
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª
        if not user_states[user_id]['subscribed']:
            bot.answer_callback_query(
                call.id, 
                "‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!", 
                show_alert=True
            )
            return
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        bot.answer_callback_query(call.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        bot.send_message(
            call.message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
            reply_markup=create_phone_keyboard()
        )
    

    


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ (–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    user_id = message.from_user.id
    
    if user_id not in user_states:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phone_number = message.contact.phone_number
    user_states[user_id]['phone_number'] = phone_number
    user_states[user_id]['phone_provided'] = True
    
    # –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—à–∞–≥–æ–≤–æ
    user_states[user_id]['current_step'] = 'parent_fio'
    
    success_text = f"""
‚úÖ **–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–µ–Ω!**

üìã **–°—Ç–∞—Ç—É—Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:**
üîç –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ
üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–¥–∏—Ç–µ–ª–µ –∏ —Ä–µ–±–µ–Ω–∫–µ: ‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω–∞

**–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:** –í–≤–µ–¥–∏—Ç–µ –§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á)
    """
    
    bot.reply_to(message, success_text, parse_mode='Markdown')

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    user_id = message.from_user.id
    user_text = message.text.lower()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    if user_id not in user_states:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start")
        return
    
    # –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if '–ø—Ä–∏–≤–µ—Ç' in user_text or '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π' in user_text:
        bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! üòä")
    elif '–∫–∞–∫ –¥–µ–ª–∞' in user_text or '–∫–∞–∫ —Ç—ã' in user_text:
        bot.reply_to(message, "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è –∫–∞–∫ –¥–µ–ª–∞? üòÑ")
    elif '—Å–ø–∞—Å–∏–±–æ' in user_text or '–±–ª–∞–≥–æ–¥–∞—Ä—é' in user_text:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º! üòä")
    elif '–ø–æ–∫–∞' in user_text or '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è' in user_text:
        bot.reply_to(message, "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë—É–¥—É –∂–¥–∞—Ç—å –Ω–∞—à–µ–π —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏! üëã")
    elif '–∫—Ç–æ —Ç—ã' in user_text or '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å' in user_text:
        bot.reply_to(message, "–Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Ç –∫–ª—É–±–∞ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏ J-Get! –£–º–µ—é —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –≤–µ—Å—Ç–∏ –ø—Ä–æ—Å—Ç—ã–µ –¥–∏–∞–ª–æ–≥–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! ü§ñ")
    else:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—à–∞–≥–æ–≤—ã–π —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        if handle_registration_steps(message):
            return
        else:
            # –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Ö–æ
            bot.reply_to(message, f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {message.text}")

def handle_registration_steps(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—à–∞–≥–æ–≤—ã–π —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    user_id = message.from_user.id
    text = message.text.strip()
    
    if user_id not in user_states:
        return False
    
    current_step = user_states[user_id].get('current_step', 'subscription')
    
    if current_step == 'parent_fio':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è
        user_states[user_id]['parent_fio'] = text
        user_states[user_id]['current_step'] = 'child_school'
        
        next_text = f"""
‚úÖ **–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {text}**

üìã **–°—Ç–∞—Ç—É—Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:**
üîç –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ
üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
üë§ –§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è: ‚úÖ –í–≤–µ–¥–µ–Ω–æ
üè´ –®–∫–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞: ‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω–∞
üìö –ö–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞: ‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω

**–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:** –í–≤–µ–¥–∏—Ç–µ —à–∫–æ–ª—É —Ä–µ–±–µ–Ω–∫–∞

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–ë–û–£ –°–û–® ‚Ññ39)
        """
        bot.reply_to(message, next_text, parse_mode='Markdown')
        return True
        
    elif current_step == 'child_school':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —à–∫–æ–ª—É —Ä–µ–±–µ–Ω–∫–∞
        user_states[user_id]['child_school'] = text
        user_states[user_id]['current_step'] = 'child_class'
        
        next_text = f"""
‚úÖ **–®–∫–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {text}**

üìã **–°—Ç–∞—Ç—É—Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:**
üîç –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ
üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
üë§ –§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è: ‚úÖ –í–≤–µ–¥–µ–Ω–æ
üè´ –®–∫–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞: ‚úÖ –í–≤–µ–¥–µ–Ω–∞
üìö –ö–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞: ‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω

**–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:** –í–≤–µ–¥–∏—Ç–µ –∫–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä: 7–ê, 8–ë, 11)
        """
        bot.reply_to(message, next_text, parse_mode='Markdown')
        return True
        
    elif current_step == 'child_class':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        user_states[user_id]['child_class'] = text
        
        # –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º
        participant_code = generate_participant_code()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
        if save_participant_to_excel(
            user_id, 
            user_states[user_id]['username'], 
            user_states[user_id]['parent_fio'],
            user_states[user_id]['child_school'],
            text,  # child_class
            user_states[user_id]['phone_number'], 
            participant_code
        ):
            success_text = f"""
üéâ **–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤—ã —É—á–∞—Å—Ç–Ω–∏–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞!**

üìã **–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:**
üë§ –§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è: {user_states[user_id]['parent_fio']}
üè´ –®–∫–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞: {user_states[user_id]['child_school']}
üìö –ö–ª–∞—Å—Å —Ä–µ–±–µ–Ω–∫–∞: {text}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_states[user_id]['phone_number']}
üé´ **–ö–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞: `{participant_code}`**

üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥! –û–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ.

üçÄ –£–¥–∞—á–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!
            """
            bot.reply_to(message, success_text, parse_mode='Markdown')
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º
            bot.send_message(
                message.chat.id,
                f"üé´ **–í–∞—à –∫–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞: `{participant_code}`**",
                parse_mode='Markdown'
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            user_states[user_id]['current_step'] = 'completed'
            return True
        else:
            bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return True
    
    return False

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤
@bot.message_handler(content_types=['sticker'])
def handle_sticker(message):
    bot.reply_to(message, "–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä! üòÑ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    bot.reply_to(message, "–ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ! üì∏")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    bot.reply_to(message, "–ü–æ–ª—É—á–∏–ª –≤–∞—à–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üé§")

if __name__ == "__main__":
    bot.polling(none_stop=True, interval=0)
